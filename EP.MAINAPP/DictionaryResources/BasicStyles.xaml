<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:sys="clr-namespace:System;assembly=System.Runtime">
    
    <!-- COLORS -->
    <Color x:Key="PrimaryColor">#036578</Color>

    <!-- LOGO -->
    <Style x:Key="IconLogo" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="Images/playlist.png"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Margin" Value="20,0"/>
    </Style>

    <!-- ICONS -->
    <Style x:Key="IconAdd" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="Images/add.png"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Margin" Value="20,0"/>
    </Style>

    <Style x:Key="IconDelete"  TargetType="{x:Type Image}">
        <Setter Property="Source" Value="Images/delete.png"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Margin" Value="20,0"/>
    </Style>

    <Style x:Key="IconUpdate"  TargetType="{x:Type Image}">
        <Setter Property="Source" Value="Images/update.png"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Margin" Value="20,0"/>
    </Style>

    <Style x:Key="IconPDF"  TargetType="{x:Type Image}">
        <Setter Property="Source" Value="Images/download-pdf.png"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Margin" Value="20,0"/>
    </Style>

    <Style x:Key="IconExit"  TargetType="{x:Type Image}">
        <Setter Property="Source" Value="Images/logout.png"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Margin" Value="20,0"/>
    </Style>
    
    <!-- BUTTONS #FFE91E63 -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="Helvetica"/>
        <Setter Property="FontSize" Value="15"/>

        <Setter Property="Background" Value="#FF02A9F4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="10"
                                                                                BorderThickness="1"
                                                                                BorderBrush="White">
                        <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Foreground" Value="#036578"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  DataGrid -->
    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="Wheat"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Margin" Value="15 0 15 10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Border x:Name="columnHeaderBorder" BorderBrush="Black"
                            BorderThickness="0 0 0 1">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          VerticalAlignment="Center"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ValidationErrorTemplate" Value="{x:Null}"/>
        <Setter Property="Margin" Value="10 0 10 5"/>

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border x:Name="border"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="1"
                            SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="red"/>
            </Trigger>
        </Style.Triggers>
        
    </Style>

</ResourceDictionary>
    
   
    